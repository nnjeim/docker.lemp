version: "3"
services:
  # nginx container
  nginx:
    image: nginx
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: nginx.dockerfile
    platform: linux/arm64/v8
    restart: always
    networks:
      - my-network
    volumes:
      - ./nginx/log:/var/log/nginx
      - ./app:/var/www/html
    ports:
      - "80:80"
      - "443:443"
    links:
      - phpfpm
      - mysql
      - redis
  # php-fpm container
  phpfpm:
    image: phpfpm
    container_name: phpfpm
    build:
      context: ./phpfpm
      dockerfile: phpfpm.dockerfile
    platform: linux/arm64/v8
    restart: always
    networks:
      - my-network
    volumes:
      - ./app:/var/www/html
    links:
      - mysql
      - redis
    ports:
      - "9000:9000"
  # MySQL container
  mysql:
    image: mysql
    container_name: mysql
    build:
      context: ./mysql
      dockerfile: mysql.dockerfile
    platform: linux/arm64/v8
    restart: always
    networks:
      - my-network
    env_file:
      - ./mysql/mysql.env
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/data:/var/lib/mysql
  # Redis container
  redis:
    image: redis
    container_name: redis
    build:
      context: ./redis
      dockerfile: redis.dockerfile
    platform: linux/arm64/v8
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/data
    networks:
      - my-network
  # phpMyAdmin container
  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    build:
      context: ./phpMyAdmin
      dockerfile: phpMyAdmin.dockerfile
    platform: linux/arm64/v8
    restart: always
    networks:
      - my-network
    ports:
      - "8081:80"
    env_file:
      - ./phpMyAdmin/phpMyAdmin.env
    depends_on:
      - mysql
# Define networks
networks:
  my-network:
    driver: bridge
