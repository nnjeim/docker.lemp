version: "3.9"
services:
  # nginx container
  web:
    image: web
    container_name: web-${TAG}
    build:
      context: ./docker/web
      dockerfile: web.dockerfile
    platform: ${PLATFORM}
    restart: always
    networks:
      - cf-network
    volumes:
      - ./docker/log/nginx:/var/log/nginx
      - ./docker/log/supervisor:/var/log/supervisor
      - $SRC:/var/www/html
    ports:
      - "${WEB_HTTP_PORT}:80"
      - "${WEB_HTTPS_PORT}:443"
    depends_on:
      redis:
        condition: service_healthy
      mysql:
        condition: service_healthy
  # MySQL container
  mysql:
    image: mysql
    container_name: mysql-${TAG}
    build:
      context: ./docker/mysql
      dockerfile: mysql.dockerfile
    platform: ${PLATFORM}
    restart: always
    networks:
      - cf-network
    env_file:
      - ./docker/mysql/mysql.env
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-p${MYSQL_ROOT_PASSWORD}" ]
      timeout: 20s
      retries: 10
  # Redis container
  redis:
    image: redis
    container_name: redis-${TAG}
    build:
      context: ./docker/redis
      dockerfile: redis.dockerfile
    platform: ${PLATFORM}
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ./docker/log/redis:/var/log/redis
      - ./docker/redis/data:/data
    networks:
      - cf-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 50
# Define networks
networks:
  cf-network:
    driver: bridge
